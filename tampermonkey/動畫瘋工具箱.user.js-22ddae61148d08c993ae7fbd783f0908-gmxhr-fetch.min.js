((a,b)=>{a.gmfetch=b("undefined"==typeof GM?{}:GM)})(this,a=>{if("undefined"==typeof GM_xmlhttpRequest&&"undefined"==typeof a.xmlHttpRequest)throw new Error("Either GM_xmlhttpRequest or GM.xmlHttpRequest must exists!");"function"!=typeof GM_xmlhttpRequest||a.xmlHttpRequest||(a.xmlHttpRequest=GM_xmlhttpRequest);const b=a=>a.reduce((a,[b,c])=>(a[b]=c,a),{}),c=a=>b(a.split("\n").filter(Boolean).map(a=>a.split(":").map(a=>a.trim()))),d=(e,f={})=>e instanceof Request?d(e.url,Object.assign({},e,f)):new Promise(d=>{f.headers instanceof Headers&&(f.headers=b(Array.from(f.headers.entries()))),f.data=f.body,f=Object.assign({method:"GET",headers:{}},f,{url:e,responseType:"blob"}),a.xmlHttpRequest(Object.assign({},f,{onload:a=>{a.headers=c(a.responseHeaders),d(new Response(a.response,Object.assign({},f,a)))},onerror:a=>{console.log("err",a),d(new Response(a.response,Object.assign({},f,a)))}}))});return d});